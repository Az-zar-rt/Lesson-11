//private: закрытый или приватный компонент класса или структуры. Приватный компонент доступен только в рамках своего класса или структуры.
//private protected: компонент класса доступен из любого места в своем классе или в производных классах, которые определены в той же сборке.
//protected: такой компонент класса доступен из любого места в своем классе или в производных классах. При этом производные классы могут располагаться в других сборках.
//internal: компоненты класса или структуры доступен из любого места кода в той же сборке, однако он недоступен для других программ и сборок.
//protected internal: совмещает функционал двух модификаторов protected и internal. Такой компонент класса доступен из любого места в текущей сборке и из производных классов, которые могут располагаться в других сборках.
//public: публичный, общедоступный компонент класса или структуры. Такой компонент доступен из любого места в коде, а также из других программ и сборок.
//Example example = new Example();
//Console.WriteLine("Please, enter the integer number:");
//example.Set(int.Parse(Console.ReadLine()));
//Console.WriteLine("You enter:");
//Console.WriteLine(example.Get());
//class Example
//{
//    int _num;
//    public void Set(int num)
//    {
//        _num = num;
//    }
//    public int Get()
//    {
//        return _num;
//    }
//}

//Person person = new Person();
//person.Age = 23;
//Console.WriteLine(person.Name);
//class Person
//{
//    int age = 1;
//    public int Age
//    {
//        set
//        {
//            if (value < 1 || value > 120)
//                Console.WriteLine("Возраст должен быть в диапазоне от 1 до 120");
//            else
//                age = value;
//        }
//        get { return age; }
//    }
//}
//class Person
//{
//    string name = "Tom";
//    int age = 1;
//    // свойство только для записи
//    public int Age
//    {
//        set { age = value; }
//    }
//    // свойство только для чтения
//    public string Name
//    {
//        get { return name; }
//    }
//    public void Print() => Console.WriteLine($"Name: {name}  Age: {age}");
//}
